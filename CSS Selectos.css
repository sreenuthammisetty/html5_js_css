/*CSS Selectors
CSS selectors are used to "find" (or select) the HTML elements you want to style.

We can divide CSS selectors into five categories:

Simple selectors (select elements based on name, id, class)
Combinator selectors (select elements based on a specific relationship between them)
Pseudo-class selectors (select elements based on a certain state)
Pseudo-elements selectors (select and style a part of an element)
Attribute selectors (select elements based on an attribute or attribute value)

The CSS element Selector
The element selector selects HTML elements based on the element name.*/

p {
    text-align: center;
    color: red;
  }

  /*The CSS id Selector
The id selector uses the id attribute of an HTML element to select a specific element.

The id of an element is unique within a page, so the id selector is used to select one unique element!

To select an element with a specific id, write a hash (#) character, followed by the id of the element.*/

#para1 {
    text-align: center;
    color: red;
  }

  /*The CSS class Selector
The class selector selects HTML elements with a specific class attribute.

To select elements with a specific class, write a period (.) character, followed by the class name.*/

.center {
    text-align: center;
    color: red;
  }

  /*You can also specify that only specific HTML elements should be affected by a class.
  In this example only <p> elements with class="center" will be red and center-aligned: */

p.center {
  text-align: center;
  color: red;
}
  /*HTML elements can also refer to more than one class.
  <p class="center large">This paragraph refers to two classes.</p> */
  
 /*The CSS Universal Selector
The universal selector (*) selects all HTML elements on the page.*/
* {
    text-align: center;
    color: blue;
  }

  /*The CSS Grouping Selector
The grouping selector selects all the HTML elements with the same style definitions.

Look at the following CSS code (the h1, h2, and p elements have the same style definitions)
h1 {
    text-align: center;
    color: red;
  }
  
  h2 {
    text-align: center;
    color: red;
  }
  
  p {
    text-align: center;
    color: red;
  }
    */


  h1, h2, p {
    text-align: center;
    color: red;
  }
      /*CSS Combinators
    A combinator is something that explains the relationship between the selectors.

    A CSS selector can contain more than one simple selector. Between the simple selectors, we can include a combinator.

    There are four different combinators in CSS:

    descendant selector (space)
    child selector (>)
    adjacent sibling selector (+)
    general sibling selector (~)
    
    
    Descendant Selector
The descendant selector matches all elements that are descendants of a specified element.

The following example selects all <p> elements inside <div> elements: */
div p {
    background-color: yellow;
  }

  /*Child Selector (>)
The child selector selects all elements that are the children of a specified element.

The following example selects all <p> elements that are children of a <div> element:*/
div > p {
    background-color: yellow;
  }
  /*Adjacent Sibling Selector (+)
The adjacent sibling selector is used to select an element that is directly after another specific element.

Sibling elements must have the same parent element, and "adjacent" means "immediately following".

The following example selects the first <p> element that are placed immediately after <div> elements*/

div + p {
    background-color: yellow;
  }
  /*General Sibling Selector (~)
The general sibling selector selects all elements that are next siblings of a specified element.

The following example selects all <p> elements that are next siblings of <div> elements*/
div ~ p {
    background-color: yellow;
  }
  /*
  CSS Pseudo-classes
  What are Pseudo-classes?
    A pseudo-class is used to define a special state of an element.

    For example, it can be used to:

    Style an element when a user mouses over it
    Style visited and unvisited links differently
    Style an element when it gets focus
    
    Syntax
      The syntax of pseudo-classes:

      selector:pseudo-class {
        property: value;
      }*/
  /*
  Anchor Pseudo-classes
Links can be displayed in different ways:
  */
  /* unvisited link */
a:link {
  color: #FF0000;
}

/* visited link */
a:visited {
  color: #00FF00;
}

/* mouse over link */
a:hover {
  color: #FF00FF;
}

/* selected link */
a:active {
  color: #0000FF;
}

  /*Pseudo-classes and HTML Classes
  Pseudo-classes can be combined with HTML classes:

When you hover over the link in the example, it will change color:*/
a.highlight:hover {
  color: #ff0000;
}
  /*Hover on <div>
An example of using the :hover pseudo-class on a <div> element:*/
div:hover {
  background-color: blue;
}
  /*CSS - The :first-child Pseudo-class
The :first-child pseudo-class matches a specified element that is the first child of another element.

Match the first <p> element
In the following example, the selector matches any <p> element that is the first child of any element:*/
p:first-child {
  color: blue;
}
  /*Match the first <i> element in all <p> elements
In the following example, the selector matches the first <i> element in all <p> elements:*/
p i:first-child {
  color: blue;
}
  /*Match all <i> elements in all first child <p> elements
In the following example, the selector matches all <i> elements in <p> elements that are the first child of another element:*/
p:first-child i {
  color: blue;
}
  /*CSS - The :lang Pseudo-class
The :lang pseudo-class allows you to define special rules for different languages.

In the example below, :lang defines the quotation marks for <q> elements with lang="no":*/

  /*CSS Pseudo-elements
  What are Pseudo-Elements?
A CSS pseudo-element is used to style specified parts of an element.

For example, it can be used to:

Style the first letter, or line, of an element
Insert content before, or after, the content of an element

The syntax of pseudo-elements:

selector::pseudo-element {
  property: value;
}*/


  /*The ::first-line Pseudo-element
The ::first-line pseudo-element is used to add a special style to the first line of a text.

The following example formats the first line of the text in all <p> elements:
Note: The ::first-line pseudo-element can only be applied to block-level elements.

The following properties apply to the ::first-line pseudo-element:

font properties
color properties
background properties
word-spacing
letter-spacing
text-decoration
vertical-align
text-transform
line-height
clear
*/
p::first-line {
  color: #ff0000;
  font-variant: small-caps;
}
  /*The ::first-letter Pseudo-element
The ::first-letter pseudo-element is used to add a special style to the first letter of a text.

The following example formats the first letter of the text in all <p> elements*/
p::first-letter {
  color: #ff0000;
  font-size: xx-large;
}
  /*Pseudo-elements and HTML Classes
Pseudo-elements can be combined with HTML classes: */
p.intro::first-letter {
  color: #ff0000;
  font-size: 200%;
}
  /*Multiple Pseudo-elements
Several pseudo-elements can also be combined.

In the following example, the first letter of a paragraph will be red, in an xx-large font size. The rest of the first line will be blue, and in small-caps. The rest of the paragraph will be the default font size and color:*/
p::first-letter {
  color: #ff0000;
  font-size: xx-large;
}

p::first-line {
  color: #0000ff;
  font-variant: small-caps;
}
/*CSS - The ::before Pseudo-element
The ::before pseudo-element can be used to insert some content before the content of an element.

The following example inserts an image before the content of each <h1> element:*/
h1::before {
  content: url(smiley.gif);
}
  /*CSS - The ::after Pseudo-element
The ::after pseudo-element can be used to insert some content after the content of an element.

The following example inserts an image after the content of each <h1> element:*/
h1::after {
  content: url(smiley.gif);
}
  /*CSS - The ::marker Pseudo-element
The ::marker pseudo-element selects the markers of list items.

The following example styles the markers of list items:*/
::marker {
  color: red;
  font-size: 23px;
}
  /*CSS - The ::selection Pseudo-element
The ::selection pseudo-element matches the portion of an element that is selected by a user.

The following CSS properties can be applied to ::selection: color, background, cursor, and outline.

The following example makes the selected text red on a yellow background:*/
::selection {
  color: red;
  background: yellow;
}
  

